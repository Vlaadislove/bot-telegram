import { Context, InlineKeyboard } from "grammy"
import { bot, MyContext } from "../index"
import * as settings from "../settings"
import { getConfig } from "./other-service"



export const instructionsCQ = async (ctx: MyContext) => {
    const deviseKeyboard = new InlineKeyboard()
        .text('üì±IOS', 'instructions-iphone').text('ü§ñAndroid', 'instructions-android')
        .row().text('üñ• Windows', "instructions-windows").text('üíª MacOS', 'instructions-macOC')
    if (!ctx.callbackQuery) return
    await ctx.callbackQuery.message?.editText('–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∫–∞–∫–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN?', {
        reply_markup: deviseKeyboard
    })
    await ctx.answerCallbackQuery()
}
export const instructionsIphoneCQ = async (ctx: MyContext) => {
    const deviseKeyboard = new InlineKeyboard().text('üìπ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-iphone')
    if (!ctx.callbackQuery) return
    await ctx.callbackQuery.message?.editText('<b>–®–∞–≥ 1.</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ',{
        parse_mode:"HTML"
    })
    await ctx.reply('<b>–®–∞–≥ 2.</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FoXray –∏–∑ AppStore üëâ https://apps.apple.com/ru/app/foxray/id6448898396', {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply('<b>–®–∞–≥ 3.</b> –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üìã–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –≤—Å—Ç–∞–≤–∫—É –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram',{
        parse_mode:"HTML"
    })
    await ctx.reply('<b>–®–∞–≥ 4.</b> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ ‚ñ∑ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –ø–æ—è–≤–∏–≤—à–µ–≥–æ—Å—è —Ç—É–Ω–µ–ª—è –¥–ª—è VPN',{
        parse_mode:"HTML"
    })
    await ctx.reply('üéâVPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b><u>–í–ò–î–ï–û</u></b> –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µVPN', {
        reply_markup: deviseKeyboard,
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
}
export const instructionsAndroidCQ = async (ctx: MyContext) => {
    // const deviseKeyboard = new InlineKeyboard().text('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-android')
    if (!ctx.callbackQuery) return
    await ctx.callbackQuery.message?.editText('<b>–®–∞–≥ 1.</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ',{
        parse_mode:"HTML"
    })
    await ctx.reply(`
<b>–®–∞–≥ 2.</b> –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ v2rayNG –∏–∑ GooglePlay https://play.google.com/store/apps/details?id=com.v2ray.ang

<i>–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç Google Play Store –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, —Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ ${settings.SUPPORT_NAME}</i>
`, {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply('<b>–®–∞–≥ 3.</b> –û—Ç–∫—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏ –Ω–∞ ‚ûï –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –∏ –≤—ã–±–µ—Ä–∏ "–ò–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞',{
        parse_mode:"HTML"
    })
    await ctx.reply('<b>–®–∞–≥ 4.</b> –ù–∞–∂–º–∏ –Ω–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å, –∞ –∑–∞—Ç–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É ‚òë –≤ –Ω–∏–∂–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É',{
        parse_mode:"HTML"
    })
    await ctx.reply('üéâVPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
    // await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –í–ò–î–ï–û –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –≤–∫–ª—é—á–µ–Ω–∏—é VPN', {
    //     reply_markup: deviseKeyboard
    // })
}
export const instructionsWindowsCQ = async (ctx: MyContext) => {
    const deviseKeyboard = new InlineKeyboard().text('üìπ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-windows')
    if (!ctx.callbackQuery) return
    await ctx.callbackQuery.message?.editText('<b>–®–∞–≥ 1.</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ', {
        parse_mode: 'HTML'
    })
    await ctx.reply(`<b>–®–∞–≥ 2.</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Nekoray –Ω–∞ –∫–æ–º–ø—å—Ç–µ—Ä –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ üëá

https://github.com/MatsuriDayo/nekoray/releases/download/3.26/nekoray-3.26-2023-12-09-windows64.zip

<b>–í–ù–ò–ú–ê–ù–ò–ï:</b> –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Å—ã–ª–∫—É –≤—ã—à–µüëÜ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Å—Å—ã–ª–∫—É —Å—Ä–∞–∑—É –Ω–∞—á–Ω—ë—Ç—Å—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.`, {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply(`<b>–®–∞–≥ 3.</b> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–π–º–µ—Ç 5 –º–∏–Ω—É—Ç! –°—Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ-–±—Ä–∞—É–∑–µ—Ä–µ üëá

https://telegra.ph/1-Ustanovka-i-nastrojka-Nekoray-10-11`, {
        parse_mode: "HTML",
        link_preview_options: { is_disabled: true }

    })
    await ctx.reply('–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b><u>–í–ò–î–ï–û</u></b> –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!', {
        reply_markup: deviseKeyboard,
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
}
export const instructionsMacOcCQ = async (ctx: MyContext) => {
    const deviseKeyboard = new InlineKeyboard().text('üìπ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-iphone')
    if (!ctx.callbackQuery) return
    await ctx.callbackQuery.message?.editText('<b>–®–∞–≥ 1.</b> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ',{
        parse_mode:"HTML"
    })
    await ctx.reply('<b>–®–∞–≥ 2.</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FoXray –∏–∑ AppStore üëâ https://apps.apple.com/ru/app/foxray/id6448898396?platform=mac', {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply('<b>–®–∞–≥ 3.</b> –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üìã–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –≤—Å—Ç–∞–≤–∫—É –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram',{
        parse_mode:"HTML"
    })
    await ctx.reply('<b>–®–∞–≥ 4.</b> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ ‚ñ∑ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –ø–æ—è–≤–∏–≤—à–µ–≥–æ—Å—è —Ç—É–Ω–µ–ª—è –¥–ª—è VPN',{
        parse_mode:"HTML"
    })
    await ctx.reply('üéâVPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b><u>–í–ò–î–ï–û</u></b> –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µVPN', {
        reply_markup: deviseKeyboard,
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
}
export const videoIphoneCQ = async (ctx: Context) => {
    await ctx.deleteMessage()
    await ctx.replyWithVideo(settings.VIDEO_INSTRUCRION_IPHONE)
    await ctx.answerCallbackQuery()
}
export const videoIWindowsCQ = async (ctx: Context) => {
    await ctx.deleteMessage()
    await ctx.replyWithVideo(settings.VIDEO_INSTRUCRION_WINDOWS)
    await ctx.answerCallbackQuery()
}
export const openConfigCQ = async (ctx: Context) => {
    const oneMonthInlineBoard = new InlineKeyboard().text('üóÇ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', `instructions`)
    const config = await getConfig(ctx.update.callback_query?.from.id as number)
    if (config) {
        await ctx.deleteMessage()
        await ctx.reply(`<code>${config}</code>`, {
            parse_mode: 'HTML'
        })
        await ctx.reply('–≠—Ç–æ –≤–∞—à –∫–æ–Ω—Ñ–∏–≥ ‚¨Ü –¥–ª—è VPN, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ(—á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)  –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üóÇ<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b>, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º!', {
            reply_markup: oneMonthInlineBoard,
            parse_mode: 'HTML'
        })
    } else {
        await ctx.deleteMessage()
        await ctx.reply('–ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    }

    await ctx.answerCallbackQuery()
}
// export const videoIAndroidCQ = async (ctx: Context) => {
//     // await ctx.deleteMessage()
//     // await ctx.replyWithVideo(settings.VIDEO_INSTRUCRION_IPHONE)
//     // await ctx.answerCallbackQuery()
// }


