
import { Bot, Context, GrammyError, HttpError, InlineKeyboard, Keyboard } from 'grammy'
import { hydrate, HydrateFlavor } from '@grammyjs/hydrate';
import * as settings from "./settings"
import mongoose from 'mongoose';
import { callbackQueryConnect, commandBuy, commandStart,
 hearsAboutService, hearsAndroid, hearsCheckSubscription, hearsCreatePay, hearsHelp,
 hearsInstructions, hearsInviteFriend, hearsIphone, hearsMainMenu } from './service/command-service';
import { getConfig } from './service/other-service';

type MyContext = HydrateFlavor<Context>
export const bot = new Bot<MyContext>(settings.BOT_TOKEN)
bot.use(hydrate())

bot.api.setMyCommands([
    {
        command: 'start',
        description: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'
    },
    {
        command: 'help',
        description: '–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å'
    },
    {
        command: 'buy',
        description: '–ü—Ä–æ–¥–ª–∏—Ç—å/–∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'
    },
])

bot.command('start', async (ctx: Context) => {
    await commandStart(ctx)
})
bot.command('buy', async (ctx: Context) => {
    await commandBuy(ctx)
})
bot.command('help', async (ctx: Context) => {
    await hearsHelp(ctx)
})


bot.hears('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', async (ctx) => {
    await hearsMainMenu(ctx)
})

bot.hears('üîî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', async (ctx) => {
    await hearsCheckSubscription(ctx)
})

bot.hears('üÜò –ü–æ–º–æ—â—å', async (ctx) => {
    await hearsHelp(ctx)
})
bot.hears('üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞', async (ctx) => {
    await hearsInviteFriend(ctx)
})
bot.hears('‚ÑπÔ∏è –í—Å—ë –æ —Å–µ—Ä–≤–∏—Å–µ', async (ctx) => {
    await hearsAboutService(ctx)
})
bot.hears('üóÇ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', async (ctx) => {
    await hearsInstructions(ctx)
})

bot.hears('üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è', async (ctx) => {
    await commandBuy(ctx)
})

bot.hears('1 –º–µ—Å—è—Ü - 140—Ä', async (ctx) => {
    await hearsCreatePay(ctx, 140)
})

bot.hears('3 –º–µ—Å—è—Ü–∞ - 390—Ä', async (ctx) => {
    await hearsCreatePay(ctx, 390)
})
bot.hears('üì±IOS', async (ctx) => {
    await hearsIphone(ctx)
})
bot.hears('ü§ñAndroid', async (ctx) => {
    await hearsAndroid(ctx)
})


bot.callbackQuery('connect', async (ctx) => {
    await callbackQueryConnect(ctx)
})

bot.callbackQuery('instructions', async (ctx) => {
    const deviseKeyboard = new InlineKeyboard().text('üì±IOS', 'instructions-iphone').text('ü§ñAndroid', 'instructions-android')
    await ctx.callbackQuery.message?.editText('–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è –∫–∞–∫–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN?', {
        reply_markup: deviseKeyboard
    })
    await ctx.answerCallbackQuery()
})
bot.callbackQuery('instructions-iphone', async (ctx) => {
    const deviseKeyboard = new InlineKeyboard().text('üìπ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-iphone')
    await ctx.callbackQuery.message?.editText('–®–∞–≥ 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ')
    await ctx.reply('–®–∞–≥ 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FoXray –∏–∑ AppStore üëâ https://apps.apple.com/ru/app/foxray/id6448898396', {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply('–®–∞–≥ 3. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üìã–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –≤—Å—Ç–∞–≤–∫—É –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram')
    await ctx.reply('–®–∞–≥ 4. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ ‚ñ∑ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –ø–æ—è–≤–∏–≤—à–µ–≥–æ—Å—è —Ç—É–Ω–µ–ª—è –¥–ª—è VPN')
    await ctx.reply('üéâVPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b><u>–í–ò–î–ï–û</u></b> –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µVPN', {
        reply_markup: deviseKeyboard,
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
})
bot.callbackQuery('instructions-android', async (ctx) => {
    // const deviseKeyboard = new InlineKeyboard().text('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 'video-android')
    await ctx.callbackQuery.message?.editText('–®–∞–≥ 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ üëÜ')
    await ctx.reply(`
    –®–∞–≥ 2. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ v2rayNG –∏–∑ GooglePlay https://play.google.com/store/apps/details?id=com.v2ray.ang

<i>–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç Google Play Store –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, —Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ @vlad_is_loovee</i>
    `, {
        parse_mode: 'HTML',
        link_preview_options: { is_disabled: true }
    })
    await ctx.reply('–®–∞–≥ 3. –û—Ç–∫—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏ –Ω–∞ ‚ûï –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –∏ –≤—ã–±–µ—Ä–∏ "–ò–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞')
    await ctx.reply('–®–∞–≥ 4. –ù–∞–∂–º–∏ –Ω–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å, –∞ –∑–∞—Ç–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É ‚òë –≤ –Ω–∏–∂–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É')
    await ctx.reply('üéâVPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>VPNinja</b> ‚ù§Ô∏è', {
        parse_mode: 'HTML'
    })
    await ctx.answerCallbackQuery()
    // await ctx.reply('–ï—â–µ –ø—Ä–æ—â–µ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –í–ò–î–ï–û –∏–Ω—Ç—Å—Ä—É–∫—Ü–∏—é –ø–æ –≤–∫–ª—é—á–µ–Ω–∏—é VPN', {
    //     reply_markup: deviseKeyboard
    // })
})
bot.callbackQuery('video-iphone', async (ctx) => {
    await ctx.deleteMessage()
    await ctx.replyWithVideo('BAACAgIAAxkBAAIW8mY757iZUjhk4klzIrghQ_FXQ3z-AAKzTQACmt7gSa3vctwskkuKNQQ')
    await ctx.answerCallbackQuery()
})
bot.callbackQuery('open-config', async (ctx) => {
    const oneMonthInlineBoard = new InlineKeyboard().text('üóÇ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', `instructions`)
    const config = await getConfig(ctx.update.callback_query?.from.id as number)
    if (config) {
        await ctx.deleteMessage()
        await ctx.reply(`<code>${config}</code>`, {
            parse_mode: 'HTML'
        })
        await ctx.reply('–≠—Ç–æ –≤–∞—à –∫–æ–Ω—Ñ–∏–≥ ‚¨Ü –¥–ª—è VPN, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ(—á–µ—Ä–µ–∑ –¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)  –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üóÇ<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b>, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º!', {
            reply_markup: oneMonthInlineBoard,
            parse_mode: 'HTML'
        })
    } else {
        await ctx.deleteMessage()
        await ctx.reply('–ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    }

    await ctx.answerCallbackQuery()
})
// bot.callbackQuery('video-android', async (ctx) => {
//     await ctx.deleteMessage()
//     await ctx.replyWithPhoto('AgACAgIAAxkBAAINmmYn5IpYoHE42RlkVJme3cS2_mwTAALW3jEb7jhASZc0brbm5AGiAQADAgADcwADNAQ') // —Ç—É—Ç –±—É–¥–µ—Ç –≤–∏–¥–µ–æ
// })


// bot.on('message', async (ctx) => {
// // await ctx.replyWithVideo('BAACAgIAAxkBAAIW8mY757iZUjhk4klzIrghQ_FXQ3z-AAKzTQACmt7gSa3vctwskkuKNQQ')
// console.log(ctx.message)
// })


bot.catch((err) => {
    const ctx = err.ctx;
    console.error(`Error while handling update ${ctx.update.update_id}:`); const e = err.error;
    if (e instanceof GrammyError) {
        console.error('Error in request:', e.description);
    } else if (e instanceof HttpError) {
        console.error('Could not contact Telegram:', e);
    } else {
        console.error('Unknown error:', e);
    }
});


async function start() {
    try {
        await mongoose.connect(settings.DB_URL).then(() => console.log('Mongoose –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'))
        bot.start()
        console.log('Bot launched successfully')
    } catch (error) {
        console.log(error);
    }
}
start()

